// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiciosAdicionales.Repository;

#nullable disable

namespace ServiciosAdicionales.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241006204938_algo")]
    partial class algo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ServiciosAdicionales.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.PedidoDeServicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SitioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("estadoPedido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tipoPedido")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("PedidosDeServicios");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CantidadDias")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CantidadHoras")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("HoraFin")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly?>("HoraInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Justificacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PedidoDeServicioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoAdicionalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pedidoDeServiciosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TipoAdicionalId");

                    b.HasIndex("pedidoDeServiciosId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Sitio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sitios");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.TipoAdicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TiposAdicional");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IGG")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SectorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Solicitante")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("SectorId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.PedidoDeServicios", b =>
                {
                    b.HasOne("ServiciosAdicionales.Models.Usuario", "Empleado")
                        .WithMany("PedidosComoEmpleado")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServiciosAdicionales.Models.Usuario", "Solicitante")
                        .WithMany("PedidosComoSolicitante")
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Servicio", b =>
                {
                    b.HasOne("ServiciosAdicionales.Models.TipoAdicional", "tipoAdicional")
                        .WithMany()
                        .HasForeignKey("TipoAdicionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiciosAdicionales.Models.PedidoDeServicios", "pedidoDeServicios")
                        .WithMany("Servicios")
                        .HasForeignKey("pedidoDeServiciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedidoDeServicios");

                    b.Navigation("tipoAdicional");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Usuario", b =>
                {
                    b.HasOne("ServiciosAdicionales.Models.Empresa", "empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiciosAdicionales.Models.Sector", "sector")
                        .WithMany("Usuarios")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");

                    b.Navigation("sector");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Empresa", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.PedidoDeServicios", b =>
                {
                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Sector", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ServiciosAdicionales.Models.Usuario", b =>
                {
                    b.Navigation("PedidosComoEmpleado");

                    b.Navigation("PedidosComoSolicitante");
                });
#pragma warning restore 612, 618
        }
    }
}
